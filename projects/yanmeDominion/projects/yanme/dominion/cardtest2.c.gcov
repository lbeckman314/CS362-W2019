        -:    0:Source:cardtest2.c
        -:    0:Graph:cardtest2.gcno
        -:    0:Data:cardtest2.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "myAssert.h"
        -:    2:#include "dominion.h"
        -:    3:#include <stdio.h>
        -:    4:
function main called 1 returned 100% blocks executed 69%
        1:    5:int main(int argc, char* argv[])
        1:    6:{
        -:    7:    // adventurer
        1:    8:    int player = 0;
        1:    9:    int drawntreasure = 0;
        1:   10:    struct gameState *testGame = newGame();
call    0 returned 100%
        -:   11:
        1:   12:    testGame->deckCount[player] = 5;
        1:   13:    testGame->handCount[player] = 5;
        -:   14:
        1:   15:    int temphand[testGame->handCount[player]];
        1:   16:    int k[10] = {adventurer, gardens, embargo, village, minion, mine, cutpurse, sea_hag, tribute, smithy};
        1:   17:    initializeGame(2, k, 10, testGame);
call    0 returned 100%
        -:   18:
       1*:   19:    myAssert(play_adventurer(player, temphand, testGame) == 0);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
call    3 returned 100%
call    4 never executed
        -:   20:
        1:   21:    int lastCard = testGame->hand[player][testGame->handCount[player]-1];
       1*:   22:    myAssert(lastCard == copper || lastCard == silver || lastCard == gold);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
call    6 returned 100%
call    7 never executed
        -:   23:    //printf("card: %d\n", testGame->hand[player][testGame->handCount[player]-1]);
        -:   24:}
        -:   25:
