        -:    0:Source:cardtest1.c
        -:    0:Graph:cardtest1.gcno
        -:    0:Data:cardtest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "myAssert.h"
        -:    2:#include "dominion.h"
        -:    3:#include <stdio.h>
        -:    4:
function main called 1 returned 100% blocks executed 77%
        1:    5:int main(int argc, char* argv[])
        -:    6:{
        -:    7:    // smithy
        1:    8:    int player = 0;
        1:    9:    struct gameState *testGame = newGame();
call    0 returned 100%
        1:   10:    int handPos = 0;
        1:   11:    testGame->deckCount[player] = 5;
        1:   12:    testGame->handCount[player] = 5;
        -:   13:
       1*:   14:    myAssert(play_smithy(player, handPos, testGame) == 0); 
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
call    3 returned 100%
call    4 never executed
       1*:   15:    myAssert(testGame->deckCount[player] == 2);
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 returned 100%
call    3 never executed
       1*:   16:    myAssert(testGame->handCount[player] == 7);
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 returned 100%
call    3 never executed
        1:   17:    printf("deck count: %d\n", testGame->deckCount[player]);
call    0 returned 100%
        1:   18:    printf("hand count: %d\n", testGame->handCount[player]);
call    0 returned 100%
        -:   19:
        1:   20:    play_smithy(player, handPos, testGame); 
call    0 returned 100%
       1*:   21:    myAssert(testGame->deckCount[player] == 0);
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 returned 100%
call    3 never executed
       1*:   22:    myAssert(testGame->handCount[player] == 8);
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 returned 100%
call    3 never executed
        -:   23:    //printf("deck count: %d\n", testGame->deckCount[player]);
        -:   24:    //printf("hand count: %d\n", testGame->handCount[player]);
        -:   25:}
